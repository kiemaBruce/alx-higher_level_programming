>>> import os, sys, math
>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> os.chdir("..")
>>> cwd = os.getcwd()
>>> sys.path.append(cwd)
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0], [3.5, 4.0, 4.5]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix_divided(2)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix_divided(2, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(True, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided((1, 2, "string"), 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided({1, 2, 3}, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided({"one": 1, "two": 2, "three": 3}, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 3], ['a', 'b', 'c'], ['s', 'c']], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 3], [4, 5], [6, 7, 8]], 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 's')
Traceback (most recent call last):
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], True)
Traceback (most recent call last):
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], (1, 's'))
Traceback (most recent call last):
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], {1, 2, 3})
Traceback (most recent call last):
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], {"name": "King", "age": 34})
Traceback (most recent call last):
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], [1, 2, 3])
Traceback (most recent call last):
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
>>> matrix_divided([[1, 2, 3], [math.nan, 5, 6], [7, 8, 9]], 2)
[[0.5, 1.0, 1.5], [nan, 2.5, 3.0], [3.5, 4.0, 4.5]]
>>> matrix_divided([[1, 2, 3], [math.nan, 5, 6], [float('inf'), 8, 9]], 2)
[[0.5, 1.0, 1.5], [nan, 2.5, 3.0], [inf, 4.0, 4.5]]
>>> matrix_divided([[1, 2, 3], [math.nan, 5, 6], [-float('inf'), 8, 9]], 2)
[[0.5, 1.0, 1.5], [nan, 2.5, 3.0], [-inf, 4.0, 4.5]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], -float('inf'))
[[-0.0, -0.0, -0.0], [-0.0, -0.0, -0.0], [-0.0, -0.0, -0.0]]
