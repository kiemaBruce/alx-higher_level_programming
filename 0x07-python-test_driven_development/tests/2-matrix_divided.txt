>>> import sys, os, importlib
>>> os.chdir('..')
>>> new_dir = os.getcwd
>>> sys.path.append(new_dir)
>>> module_name = '2-matrix_divided'
>>> module = importlib.import_module(module_name)
>>> module.matrix_divided([[1, 2, 3], [2, 4, 6], [3, 6, 9]], 2)
[[0.5, 1.0, 1.5], [1.0, 2.0, 3.0], [1.5, 3.0, 4.5]]
>>> module.matrix_divided('c', 1)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> module.matrix_divided(5, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> module.matrix_divided(5.5, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> module.matrix_divided({'cat': 'Fish', 'kittens': 3}, 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> module.matrix_divided((1, 2, 3), 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> module.matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> module.matrix_divided([[4, 5, 6], [2, 7, 8], 'b'], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> module.matrix_divided([[4, 5, 6], [2, 7, 8], [True, False, False]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> module.matrix_divided([[1, 2, 3], [2, 4, 6], [3, 6, 9, 4]], 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size
>>> module.matrix_divided([[1, 2, 3], [2, 4, 6], [3, 6, 9]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
>>> module.matrix_divided([[1, 2, 3], [2, 4, 6], [3, 6, 9]], True)
Traceback (most recent call last):
TypeError: div must be a number
